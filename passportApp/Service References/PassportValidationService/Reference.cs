//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.ServiceModel.Channels;
using System.Threading.Tasks;

namespace passportApp.PassportValidationService {
    [DebuggerStepThrough()]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="Passport", Namespace="http://schemas.datacontract.org/2004/07/PassportValidationLib.Model")]
    [Serializable()]
    public partial class Passport : object, IExtensibleDataObject, INotifyPropertyChanged {
        
        [NonSerialized()]
        private ExtensionDataObject extensionDataField;
        
        [OptionalField()]
        private DateTime DateOfBirthField;
        
        [OptionalField()]
        private DateTime DateOfExpiryField;
        
        [OptionalField()]
        private string GenderField;
        
        [OptionalField()]
        private string MrzRow2Field;
        
        [OptionalField()]
        private string NationalityField;
        
        [OptionalField()]
        private string PassportNumberField;
        
        [Browsable(false)]
        public ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [DataMember()]
        public DateTime DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [DataMember()]
        public DateTime DateOfExpiry {
            get {
                return this.DateOfExpiryField;
            }
            set {
                if ((this.DateOfExpiryField.Equals(value) != true)) {
                    this.DateOfExpiryField = value;
                    this.RaisePropertyChanged("DateOfExpiry");
                }
            }
        }
        
        [DataMember()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [DataMember()]
        public string MrzRow2 {
            get {
                return this.MrzRow2Field;
            }
            set {
                if ((ReferenceEquals(this.MrzRow2Field, value) != true)) {
                    this.MrzRow2Field = value;
                    this.RaisePropertyChanged("MrzRow2");
                }
            }
        }
        
        [DataMember()]
        public string Nationality {
            get {
                return this.NationalityField;
            }
            set {
                if ((ReferenceEquals(this.NationalityField, value) != true)) {
                    this.NationalityField = value;
                    this.RaisePropertyChanged("Nationality");
                }
            }
        }
        
        [DataMember()]
        public string PassportNumber {
            get {
                return this.PassportNumberField;
            }
            set {
                if ((ReferenceEquals(this.PassportNumberField, value) != true)) {
                    this.PassportNumberField = value;
                    this.RaisePropertyChanged("PassportNumber");
                }
            }
        }
        
        public event PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [DebuggerStepThrough()]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="ValidationResults", Namespace="http://schemas.datacontract.org/2004/07/PassportValidationLib")]
    [Serializable()]
    public partial class ValidationResults : object, IExtensibleDataObject, INotifyPropertyChanged {
        
        [NonSerialized()]
        private ExtensionDataObject extensionDataField;
        
        [OptionalField()]
        private bool DateOfBirthCheckDigitField;
        
        [OptionalField()]
        private bool DateOfBirthCrossCheckField;
        
        [OptionalField()]
        private bool ExpirationDataCrossCheckField;
        
        [OptionalField()]
        private bool FinalCheckDigitField;
        
        [OptionalField()]
        private bool GenderCrossCheckField;
        
        [OptionalField()]
        private bool NationalityCrossCheckField;
        
        [OptionalField()]
        private bool PassportExpirationDateCheckDigitField;
        
        [OptionalField()]
        private string PassportNumberField;
        
        [OptionalField()]
        private bool PassportNumberCheckDigitField;
        
        [OptionalField()]
        private bool PassportNumberCrossCheckField;
        
        [OptionalField()]
        private bool PersonalNumberCheckDigitField;
        
        [Browsable(false)]
        public ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [DataMember()]
        public bool DateOfBirthCheckDigit {
            get {
                return this.DateOfBirthCheckDigitField;
            }
            set {
                if ((this.DateOfBirthCheckDigitField.Equals(value) != true)) {
                    this.DateOfBirthCheckDigitField = value;
                    this.RaisePropertyChanged("DateOfBirthCheckDigit");
                }
            }
        }
        
        [DataMember()]
        public bool DateOfBirthCrossCheck {
            get {
                return this.DateOfBirthCrossCheckField;
            }
            set {
                if ((this.DateOfBirthCrossCheckField.Equals(value) != true)) {
                    this.DateOfBirthCrossCheckField = value;
                    this.RaisePropertyChanged("DateOfBirthCrossCheck");
                }
            }
        }
        
        [DataMember()]
        public bool ExpirationDataCrossCheck {
            get {
                return this.ExpirationDataCrossCheckField;
            }
            set {
                if ((this.ExpirationDataCrossCheckField.Equals(value) != true)) {
                    this.ExpirationDataCrossCheckField = value;
                    this.RaisePropertyChanged("ExpirationDataCrossCheck");
                }
            }
        }
        
        [DataMember()]
        public bool FinalCheckDigit {
            get {
                return this.FinalCheckDigitField;
            }
            set {
                if ((this.FinalCheckDigitField.Equals(value) != true)) {
                    this.FinalCheckDigitField = value;
                    this.RaisePropertyChanged("FinalCheckDigit");
                }
            }
        }
        
        [DataMember()]
        public bool GenderCrossCheck {
            get {
                return this.GenderCrossCheckField;
            }
            set {
                if ((this.GenderCrossCheckField.Equals(value) != true)) {
                    this.GenderCrossCheckField = value;
                    this.RaisePropertyChanged("GenderCrossCheck");
                }
            }
        }
        
        [DataMember()]
        public bool NationalityCrossCheck {
            get {
                return this.NationalityCrossCheckField;
            }
            set {
                if ((this.NationalityCrossCheckField.Equals(value) != true)) {
                    this.NationalityCrossCheckField = value;
                    this.RaisePropertyChanged("NationalityCrossCheck");
                }
            }
        }
        
        [DataMember()]
        public bool PassportExpirationDateCheckDigit {
            get {
                return this.PassportExpirationDateCheckDigitField;
            }
            set {
                if ((this.PassportExpirationDateCheckDigitField.Equals(value) != true)) {
                    this.PassportExpirationDateCheckDigitField = value;
                    this.RaisePropertyChanged("PassportExpirationDateCheckDigit");
                }
            }
        }
        
        [DataMember()]
        public string PassportNumber {
            get {
                return this.PassportNumberField;
            }
            set {
                if ((ReferenceEquals(this.PassportNumberField, value) != true)) {
                    this.PassportNumberField = value;
                    this.RaisePropertyChanged("PassportNumber");
                }
            }
        }
        
        [DataMember()]
        public bool PassportNumberCheckDigit {
            get {
                return this.PassportNumberCheckDigitField;
            }
            set {
                if ((this.PassportNumberCheckDigitField.Equals(value) != true)) {
                    this.PassportNumberCheckDigitField = value;
                    this.RaisePropertyChanged("PassportNumberCheckDigit");
                }
            }
        }
        
        [DataMember()]
        public bool PassportNumberCrossCheck {
            get {
                return this.PassportNumberCrossCheckField;
            }
            set {
                if ((this.PassportNumberCrossCheckField.Equals(value) != true)) {
                    this.PassportNumberCrossCheckField = value;
                    this.RaisePropertyChanged("PassportNumberCrossCheck");
                }
            }
        }
        
        [DataMember()]
        public bool PersonalNumberCheckDigit {
            get {
                return this.PersonalNumberCheckDigitField;
            }
            set {
                if ((this.PersonalNumberCheckDigitField.Equals(value) != true)) {
                    this.PersonalNumberCheckDigitField = value;
                    this.RaisePropertyChanged("PersonalNumberCheckDigit");
                }
            }
        }
        
        public event PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [ServiceContract(ConfigurationName="PassportValidationService.IService1")]
    public interface IService1 {
        
        [OperationContract(Action="http://tempuri.org/IService1/ValidatePassportData", ReplyAction="http://tempuri.org/IService1/ValidatePassportDataResponse")]
        ValidationResults ValidatePassportData(Passport passport);
        
        [OperationContract(Action="http://tempuri.org/IService1/ValidatePassportData", ReplyAction="http://tempuri.org/IService1/ValidatePassportDataResponse")]
        Task<ValidationResults> ValidatePassportDataAsync(Passport passport);
    }
    
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : IService1, IClientChannel {
    }
    
    [DebuggerStepThrough()]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : ClientBase<IService1>, IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(Binding binding, EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ValidationResults ValidatePassportData(Passport passport) {
            return base.Channel.ValidatePassportData(passport);
        }
        
        public Task<ValidationResults> ValidatePassportDataAsync(Passport passport) {
            return base.Channel.ValidatePassportDataAsync(passport);
        }
    }
}
